@use 'sass:color';
@use 'sakura.css/scss/sakura-vader' as sakura;

/* Big multiselect buttons */
.toggleRes {
	display: flex;
	border-radius: 12px;
	overflow: hidden;
	gap: 4px;

	>label {
		flex: 1;
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		line-height: 1.2em;
		padding: 10px 10px;
		cursor: pointer;
		transition: background-color 0.3s, color 0.3s;
		margin-bottom: unset;
		user-select: none;
		text-align: center;
		background-color: color.adjust(sakura.$color-bg-alt, $lightness: -5%);

		input {
			/* Hide the native radio buttons */
			display: none;
		}

		>span, >div>span {
			font-size: smaller;
			filter: contrast(50%);
		}

		&:hover {
			background-color: sakura.$color-force;
			color: sakura.$color-bg;
		}

		&:has(input:checked) {
			background-color: sakura.$color-blossom;
			color: sakura.$color-bg;
		}
	}

	/* Icon button variant */
	&.iconButton {
		>label {
			flex-direction: row;
			gap: 8px;
			align-items: center;
			padding: 10px 16px;
			
			>div {
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;
				text-align: center;
				line-height: 1.2em;
			}
			
			svg {
				height: 43px; /* Matches approximate height of text + subline */
				width: auto;
				flex-shrink: 0;
			}
		}
	}
}

@media (hover: none) {
	.toggleRes.toggleCheckbox>label:has(input:not(:checked)):hover {
		background-color: color.adjust(sakura.$color-bg-alt, $lightness: -5%);
		color: inherit;
	}
}